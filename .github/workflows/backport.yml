# **what?**
# Creates a new PR into a release branch, to backport changes from a PR into `main`.
# If the backport results in merge conflicts, leaves a comment on the PR into `main`.
#
# **why?**
# Changes sometimes need to be backported to release branches, e.g. security updates.
#
# **how?**
# The PR needs to have been squash-merged into `main` so that it is a single commit.
# Apply a backport label to a PR into `main`.
#
#     Label naming convention: "backport <branch to backport to>"
#     Example: backport 1.0.latest
#
# **when?**
# After the PR into `main` has been merged and when the backport label is added to the PR into `main`.
#
#     Only react to merged PRs for security reasons.
#     See https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target.

name: Backport
on:
  pull_request:
    types:
      - labeled
permissions:
  contents: write
  pull-requests: write
jobs:
  backport:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged && contains(github.event.label.name, 'backport')
    steps:
      - uses: tibdex/backport@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
